// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    Not(in=address[6], out=notAddress6);
    Not(in=address[7], out=notAddress7);
    Not(in=address[8], out=notAddress8);

    And(a=notAddress6, b=notAddress7, out=temp00); // Ram 0/4
    And(a=temp00, b=load, out=temp01);
    And(a=temp01, b=notAddress8, out=ram0); // Ram 0
    And(a=temp01, b=address[8], out=ram4); // Ram 4
    
    And(a=address[6], b=notAddress7, out=temp10); // Ram 1/8
    And(a=temp10, b=load, out=temp11);
    And(a=temp11, b=notAddress8, out=ram1); // Ram 1
    And(a=temp11, b=address[8], out=ram5); // Ram 5
    
    And(a=notAddress6, b=address[7], out=temp20); // Ram 2/6
    And(a=temp20, b=load, out=temp21);
    And(a=temp21, b=notAddress8, out=ram2); // Ram 2
    And(a=temp21, b=address[8], out=ram6); // Ram 6

    And(a=address[6], b=address[7], out=temp30); // Ram 3/7
    And(a=temp30, b=load, out=temp31);
    And(a=temp31, b=notAddress8, out=ram3); // Ram 3
    And(a=temp31, b=address[8], out=ram7); // Ram 7

    RAM64(in=in, load=ram0, address=address[0..5], out=tempOut0);
    RAM64(in=in, load=ram1, address=address[0..5], out=tempOut1);
    RAM64(in=in, load=ram2, address=address[0..5], out=tempOut2);
    RAM64(in=in, load=ram3, address=address[0..5], out=tempOut3);
    RAM64(in=in, load=ram4, address=address[0..5], out=tempOut4);
    RAM64(in=in, load=ram5, address=address[0..5], out=tempOut5);
    RAM64(in=in, load=ram6, address=address[0..5], out=tempOut6);
    RAM64(in=in, load=ram7, address=address[0..5], out=tempOut7);

    Mux8Way16(a=tempOut0, b=tempOut1, c=tempOut2, d=tempOut3, e=tempOut4, f=tempOut5, g=tempOut6, h=tempOut7, sel=address[6..8], out=out);
}