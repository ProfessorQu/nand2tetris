// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    Not(in=address[0], out=notAddress0);
    Not(in=address[1], out=notAddress1);
    Not(in=address[2], out=notAddress2);

    And(a=notAddress0, b=notAddress1, out=temp00); // Register 0/4
    And(a=temp00, b=load, out=temp01);
    And(a=temp01, b=notAddress2, out=register0); // Register 0
    And(a=temp01, b=address[2], out=register4); // Register 4
    
    And(a=address[0], b=notAddress1, out=temp10); // Register 1/5
    And(a=temp10, b=load, out=temp11);
    And(a=temp11, b=notAddress2, out=register1); // Register 1
    And(a=temp11, b=address[2], out=register5); // Register 5
    
    And(a=notAddress0, b=address[1], out=temp20); // Register 2/6
    And(a=temp20, b=load, out=temp21);
    And(a=temp21, b=notAddress2, out=register2); // Register 2
    And(a=temp21, b=address[2], out=register6); // Register 6

    And(a=address[0], b=address[1], out=temp30); // Register 3/7
    And(a=temp30, b=load, out=temp31);
    And(a=temp31, b=notAddress2, out=register3); // Register 3
    And(a=temp31, b=address[2], out=register7); // Register 7

    Register(in=in, load=register0, out=tempOut0);
    Register(in=in, load=register1, out=tempOut1);
    Register(in=in, load=register2, out=tempOut2);
    Register(in=in, load=register3, out=tempOut3);
    Register(in=in, load=register4, out=tempOut4);
    Register(in=in, load=register5, out=tempOut5);
    Register(in=in, load=register6, out=tempOut6);
    Register(in=in, load=register7, out=tempOut7);

    Mux8Way16(a=tempOut0, b=tempOut1, c=tempOut2, d=tempOut3, e=tempOut4, f=tempOut5, g=tempOut6, h=tempOut7, sel=address, out=out);
}